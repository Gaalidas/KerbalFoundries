PART
{
name = KF_ScrewDrive
module = Part
author = Model Spanner, concept cfg Lo-Fi

mesh = Screw.mu

node_stack_001 = 0.545, 0.38, 0.0, 1.0, 0.0, 0.0, 0
node_attach = 0.545, 0.38, 0.0, 1.0, 0.0, 0.0

TechRequired = advancedMotors
entryCost = 6000

cost = 580
category = Utility
subcategory = 0
title = KF  Screw Drive
manufacturer = SM Solutions for Kerbal Foundries
description = Dubbed the HypnoDrive by those fortunate enough to use it and survive it hypnotic charms, this alternate mode of amphibious tpropulsion comes in handy when wheels are just plain.... boring!

attachRules = 1,1,0,1,1

mass = 1.5
dragModelType = default
maximum_drag = 0.3
minimum_drag = 0.2
angularDrag = 1
maxTemp = 3600 

crashTolerance = 3000
breakingForce = 3000
breakingTorque = 3000

MODULE
{
	name = KFModuleMirror
	rightObjectName = LinkRight
	leftObjectName = LinkLeft
}

MODULE
{
	name = KFModuleWheel
	tweakScaleCorrector = 1
	raycastError = 0.0
	springRate = 0.8
	damperRate = 0.05
	torqueCurve
	{
	  key = 0 150 0 0
	  key = 8 150 0 0
	  key = 10 80 0 0
	  key = 15 0 0 0
	}
	steeringCurve
	{
	  key = 0 0 0 0
	}
	torqueSteeringCurve
	{
	  key = 0 60 0 0
	  key = 10 0 0 0
	}
	brakeSteeringCurve
	{
	  key = -25 -240 0 0
	  key = -10 -120 0 0
	  key = 0 0 0 0
	  key = 10 120 0 0
	  key = 25 240 0 0
	}
	brakingTorque = 70
	rollingResistance = 40
	maxRPM = 300
}

MODULE
{
	name = KFWheel
	wheelName = Link
	colliderName = WC4
	sustravName = DummyLink
	isIdler = false
	hasSuspension = false
	useDirectionCorrector = false
	rotationCorrection = 5
	wheelRotationX = 0
	wheelRotationY = 0
	wheelRotationZ = 1
	susTravAxis = Y	
	
}

MODULE
{
	name = ModulePropeller
	propellerForce = 25
}

EFFECTS
{
   WheelEffect
   {
	AUDIO
	{
	  channel = Ship
	  clip = KerbalFoundries/Sounds/wheel
	  volume = 0.0 0.0
	  volume = 0.1 0.2
	  volume = 1.0 1.0
	  pitch = 0.0 0.2
	  pitch = 1.0 0.5
	  loop = true
	}
   }
}

MODULE:NEEDS[Scale|TweakScale]
{
	// Technically the screw is a track, just not your ordinary track. It's really screwy.
    name = TweakScale
    type = KFTrackMedium
}

MODULE:NEEDS[Firespitter]
{
	// This thing can propel itself through water, but now we need it to float too.
	name = FSbuoyancy
	splashFXEnabled = false
}
}